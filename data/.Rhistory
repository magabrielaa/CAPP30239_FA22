ggplot(es, aes(x = years_from_treat, y = coefs)) +
geom_point(size = 2) +
geom_errorbar(aes(ymin = lb, ymax = ub)) +
xlab('Years from Treatment Year') +
ylab('Est. Treatment Effect on PM 2.5 Levels (95% CI)') +
ggtitle(label = 'Est. Treatment Effect and Years Since Treatment')
# Remove municipalities from the year 2006
data_clean <- data %>%
filter(air_quality_regulation_year != 2006 | is.na(air_quality_regulation_year)) %>%
mutate(treat = ifelse(is.na(air_quality_regulation_year), 0, 1),
post = ifelse(year >= air_quality_regulation_year & air_quality_regulation_year!=0, 1, 0))
# Run fixed effects regression
reg5 <- felm (particulate_matter ~ treat*post|municipality_id +
year|0|municipality_id, data = data_clean)
summary(reg5)
# Remove municipalities from the year 2006
data_clean <- data %>%
filter(air_quality_regulation_year != 2006 | is.na(air_quality_regulation_year)) %>%
mutate(treat = ifelse(is.na(air_quality_regulation_year), 0, 1),
post = ifelse(year >= air_quality_regulation_year & air_quality_regulation_year!=0, 1, 0),
dd = treat*post)
# Run fixed effects regression
reg5 <- felm (particulate_matter ~ dd|municipality_id +
year|0|municipality_id, data = data_clean)
summary(reg5)
# Remove municipalities from the year 2006, include treat and post dummy
# variables:
data_clean <- data %>%
filter(air_quality_regulation_year != 2006 | is.na(air_quality_regulation_year))
%>% mutate(treat = ifelse(is.na(air_quality_regulation_year), 0, 1),
# Remove municipalities from the year 2006, include treat and post dummy
# variables:
data_clean <- data %>%
filter(air_quality_regulation_year != 2006 | is.na(air_quality_regulation_year)) %>%
mutate(treat = ifelse(is.na(air_quality_regulation_year), 0, 1),
post = ifelse(year >= air_quality_regulation_year &
air_quality_regulation_year!=0, 1, 0),
dd = treat*post)
# Run fixed effects regression
reg5 <- felm (particulate_matter ~ dd|municipality_id +
year|0|municipality_id, data = data_clean)
summary(reg5)
reg6 <-plm(particulate_matter~ post,data =data_clean,
model = "within",
effect = "twoway",
index = c("municipality_id", "year"))
summary(reg2)
coeftest(reg2, vcov = vcovHC(reg2, type = "HC0", cluster = "group"))
reg6 <-plm(particulate_matter~ post,data =data_clean,
model = "within",
effect = "twoway",
index = c("municipality_id", "year"))
summary(reg6)
coeftest(reg6, vcov = vcovHC(reg6, type = "HC0", cluster = "group"))
event_study <- data_clean %>%
mutate(air_quality_regulation_year = ifelse(air_quality_regulation_year == 0, NA, air_quality_regulation_year))   %>% mutate((years_from_treatment = year - air_quality_regulation_year),
(t_min_1 = year - air_quality_regulation_year))
event_study <- data_clean %>%
mutate(air_quality_regulation_year = ifelse(air_quality_regulation_year == 0, NA, air_quality_regulation_year))   %>% mutate((years_from_treatment = year - air_quality_regulation_year),
(t_min_1 = year - air_quality_regulation_year))
# Exclude periods t minus to prevent collinearity
tmin1 <- event_study%>%
filter(t_min_1 != -1)
event_study <- data_clean %>%
mutate(air_quality_regulation_year = ifelse(air_quality_regulation_year == 0, NA, air_quality_regulation_year))   %>% mutate((years_from_treatment = year - air_quality_regulation_year),
(t_min_1 = year - air_quality_regulation_year))
View(event_study)
event_study <- data_clean %>%
mutate(air_quality_regulation_year = ifelse(air_quality_regulation_year == 0, NA, air_quality_regulation_year))   %>% mutate(years_from_treatment = year - air_quality_regulation_year),
event_study <- data_clean %>%
mutate(air_quality_regulation_year = ifelse(air_quality_regulation_year == 0, NA, air_quality_regulation_year))   %>% mutate(years_from_treatment = year - air_quality_regulation_year,
t_min_1 = year - air_quality_regulation_year)
event_study <- data_clean %>%
mutate(air_quality_regulation_year = ifelse(air_quality_regulation_year == 0, NA, air_quality_regulation_year))   %>% mutate(years_from_treatment = year - air_quality_regulation_year,
t_min_1 = year - air_quality_regulation_year)
# Exclude periods t minus to prevent collinearity
tmin1 <- event_study%>%
filter(t_min_1 != -1)
reg6<- plm(particulate_matter~ as.factor(t_min_1)*post,
data = tmin1,
model = "within",
effect = "twoway",
index = c("municipality_id", "year"))
summary(reg6)
results <- coeftest(ES, vcov = vcovHC(ES, type = "HC0", cluster = "group"))
results
coefs <- results[1:12]
se <- results[13:24]
es <- data.frame(years_from_treat = c(c(-3,-2), c(0:9)), coefs,se, lb = coefs - 1.96 * se, ub = coefs + 1.96 * se)
ggplot(es, aes(x = years_from_treat, y = coefs)) +
geom_point(size = 2) +
geom_errorbar(aes(ymin = lb, ymax = ub)) +
xlab('Years from Treatment Year') +
ylab('Est. Treatment Effect on PM 2.5 Levels (95% CI)') +
ggtitle(label = 'Est. Treatment Effect and Years Since Treatment')
event_study <- data_clean %>%
mutate(air_quality_regulation_year = ifelse(air_quality_regulation_year == 0, NA, air_quality_regulation_year))   %>% mutate(years_from_treatment = year - air_quality_regulation_year,
t_min_1 = year - air_quality_regulation_year)
# Exclude periods t minus to prevent collinearity
tmin1 <- event_study%>%
filter(t_min_1 != -1)
reg6<- plm(particulate_matter~ as.factor(t_min_1)*post,
data = tmin1,
model = "within",
effect = "twoway",
index = c("municipality_id", "year"))
summary(reg6)
results <- coeftest(ES, vcov = vcovHC(ES, type = "HC0", cluster = "group"))
results
coefs <- results[1:12]
se <- results[13:24]
es <- data.frame(years_from_treat = c(c(-3,-2), c(0:9)), coefs,se,
lb = coefs - 1.96 * se, ub = coefs + 1.96 * se)
ggplot(es, aes(x = t_min_1, y = coefs)) +
geom_point(size = 3, color = "blue") +
geom_errorbar(aes(ymin = lb, ymax = ub)) +
xlab('years from air_quality regulation emitted') +
ylab('treatment effect on particulate matter') +
ggtitle(label = 'ATE and years since Air_Quality regulations')
ggplot(es, aes(x = t_min_1, y = coefs)) +
geom_point(size = 3, color = "blue") +
geom_errorbar(aes(ymin = lb, ymax = ub)) +
xlab('years from air_quality regulation emitted') +
ylab('treatment effect on particulate matter') +
ggtitle(label = 'ATE and years since Air_Quality regulations')
event_study <- data_clean %>%
mutate(air_quality_regulation_year = ifelse(air_quality_regulation_year == 0, NA, air_quality_regulation_year))   %>% mutate(years_from_treatment = year - air_quality_regulation_year,
t_min_1 = year - air_quality_regulation_year)
# Exclude periods t minus to prevent collinearity
tmin1 <- event_study%>%
filter(t_min_1 != -1)
reg6<- plm(particulate_matter~ as.factor(t_min_1)*post,
data = tmin1,
model = "within",
effect = "twoway",
index = c("municipality_id", "year"))
summary(reg6)
results <- coeftest(ES, vcov = vcovHC(ES, type = "HC0", cluster = "group"))
results
coef <- results[1:12]
se <- results[13:24]
es <- data.frame(t_min_1 = c(c(-3,-2), c(0:9)), coef,se,
lb = coef - 1.96 * se, ub = coef + 1.96 * se)
ggplot(es, aes(x = t_min_1, y = coefs)) +
geom_point(size = 3, color = "blue") +
geom_errorbar(aes(ymin = lb, ymax = ub)) +
xlab('years from air_quality regulation emitted') +
ylab('treatment effect on particulate matter') +
ggtitle(label = 'ATE and years since Air_Quality regulations')
ggplot(es, aes(x = t_min_1, y = coefs)) +
geom_point(size = 3, color = "blue") +
geom_errorbar(aes(ymin = lb, ymax = ub)) +
xlab('years from air-quality regulation emitted') +
ylab('treatment effect on particulate matter') +
ggtitle(label = 'ATE and years since Air_Quality regulations')
ggplot(es, aes(x = t_min_1, y = coefs)) +
geom_point(size = 3, color = "blue") +
geom_errorbar(aes(ymin = lb, ymax = ub)) +
xlab('years since air-quality regulation imposed') +
ylab('ATE on particulate matter') +
ggtitle(label = 'ATE and years since Air_Quality regulations') + theme(plot.title = element_text
(hjust = 0.5))
ggplot(es, aes(x = t_min_1, y = coefs)) +
geom_point(size = 3, color = "blue") +
geom_errorbar(aes(ymin = lb, ymax = ub)) +
xlab('years since air-quality regulation imposed') +
ylab('ATE on particulate matter') +
ggtitle(label = 'ATE and years since Air_Quality regulations') +
theme(plot.title = element_text
(hjust = 0.5))
## Aggregate Social Registry Data to create csv files
# Clean environment
rm(list=ls())
# Set working directory
setwd("~/Desktop/Autumn 2022/Data Visualization/Registro Social")
# Load library
library(tidyverse)
## Aggregate Social Registry Data to create csv files
# Clean environment
rm(list=ls())
# Set working directory
setwd("~/Desktop/Autumn 2022/Data Visualization/Registro Social")
# Load library
library(tidyverse)
# Load data
df <- read_csv("urs_personas_2021abril.csv")
# Delete records with categorization "not poor"
df2 <- df[!(df$tipo_pob_rs18 =="No Pobre"),]
df2 %>% count(tipo_pob_rs18)
#
unique(df2$s1_id04_des)
a <- df2 %>% count(s1_id04_des)
df2 %>% count(tipo_pob_rs18, sort = TRUE)
df2 %>% group_by(s1_id04_des) %>% tally()
# Counts of moderately and extremely poor by province
pobre_extremo <- df2 %>%
filter(tipo_pob_rs18 == "Pobre extremo") %>%
group_by(s1_id04_des) %>%
summarise(n())
pobre_moderado <- df2 %>%
filter(tipo_pob_rs18 == "Pobre moderado") %>%
group_by(s1_id04_des) %>%
summarise(n())
# Counts of female and male by province
male <- df2 %>% filter(s5_pe03 == 1) %>%
group_by(s1_id04_des) %>%
summarise(n())
female <- df2 %>% filter(s5_pe03 == 2) %>%
group_by(s1_id04_des) %>%
summarise(n())
# Counts of female and male extremely poor by province
male_epoor <- df2 %>% filter(tipo_pob_rs18 == "Pobre extremo" & s5_pe03 == 1) %>%
group_by(s1_id04_des) %>%
summarise(n())
female_epoor <- df2 %>% filter(tipo_pob_rs18 == "Pobre extremo" & s5_pe03 == 2) %>%
group_by(s1_id04_des) %>%
summarise(n())
# Counts of female and male moderately poor by province
male_mpoor <- df2 %>% filter(tipo_pob_rs18 == "Pobre moderado" & s5_pe03 == 1) %>%
group_by(s1_id04_des) %>%
summarise(n())
female_mpoor <- df2 %>% filter(tipo_pob_rs18 == "Pobre moderado" & s5_pe03 == 2) %>%
group_by(s1_id04_des) %>%
summarise(n())
# Counts of extremely poor by age group
age_ext <- df2 %>% filter(tipo_pob_rs18 == "Pobre extremo") %>%
group_by(s5_pe05) %>%
summarise(n())
# Counts of moderately poor by age group
age_mod <- df2 %>% filter(tipo_pob_rs18 == "Pobre moderado") %>%
group_by(s5_pe05) %>%
summarise(n())
# Counts of poor by sex
age_male <- df2 %>% filter(s5_pe03 == 1) %>%
group_by(s5_pe05) %>%
summarise(n())
age_female <- df2 %>% filter(s5_pe03 == 2) %>%
group_by(s5_pe05) %>%
summarise(n())
# Counts of poor by ethnicity
ethnicity_ext <- df2 %>% filter(tipo_pob_rs18 == "Pobre extremo") %>%
group_by(s5_pe15) %>%
summarise(n())
ethnicity_mod <- df2 %>% filter(tipo_pob_rs18 == "Pobre moderado") %>%
group_by(s5_pe15) %>%
summarise(n())
# Counts of access to social security by province
social_sec <- df2 %>% filter(s5_pe16 == 1) %>%
group_by(s1_id04_des) %>%
summarise(n())
no_social_sec <- df2 %>% filter(s5_pe16 == 0) %>%
group_by(s1_id04_des) %>%
summarise(n())
# Counts of disability by province
disability <- df2 %>% filter(s5_pe18 == 1) %>%
group_by(s1_id04_des) %>%
summarise(n())
# Counts of disability by province and level of poverty
disability_ext <- df2 %>% filter(tipo_pob_rs18 == "Pobre extremo" & s5_pe18 == 1) %>%
group_by(s1_id04_des) %>%
summarise(n())
disability_mod <- df2 %>% filter(tipo_pob_rs18 == "Pobre moderado" & s5_pe18 == 1) %>%
group_by(s1_id04_des) %>%
summarise(n())
# Counts of catastrophic illness by province
cat_illness <- df2 %>% filter(s5_pe21 == 1 | s5_pe21 ==2) %>%
group_by(s1_id04_des) %>%
summarise(n())
# Counts of education level by poverty
educ_ext <- df2 %>% filter(tipo_pob_rs18 == "Pobre extremo") %>%
group_by(s5_pe30) %>%
summarise(n())
educ_mod <- df2 %>% filter(tipo_pob_rs18 == "Pobre moderado") %>%
group_by(s5_pe30) %>%
summarise(n())
# Counts of job type by poverty
job_ext <- df2 %>% filter(tipo_pob_rs18 == "Pobre extremo") %>%
group_by(s6_ae07) %>%
summarise(n())
job_mod <- df2 %>% filter(tipo_pob_rs18 == "Pobre moderado") %>%
group_by(s6_ae07) %>%
summarise(n())
# Deciles
unique(df$decil)
unique(df2$decil)
df2 %>% count(decil)
deciles <- df %>% filter(tipo_pob_rs18 == "Pobre extremo") %>%
group_by(decil) %>%
summarise(n())
setwd("~/Desktop/Autumn 2022/Data Visualization/CAPP30239_FA22/data")
# Clean environment
rm(list=ls())
# Set working directory
setwd("~/Desktop/Autumn 2022/Data Visualization/CAPP30239_FA22/data")
# Load library
library(tidyverse)
## Social Registry Data Files
# Clean environment
rm(list=ls())
# Set working directory
setwd("~/Desktop/Autumn 2022/Data Visualization/CAPP30239_FA22/data")
# Load library
library(tidyverse)
# Load data
age <- read_csv("age.csv")
deciles <- read_csv("deciles.csv")
education <- read_csv("education.csv")
ethnicity <- read_csv("ethnicity.csv")
job_type <- read_csv("job_type.csv")
province <- read_csv("province.csv")
View(age)
View(province)
province2 <- province %>%                                      # Top N highest values by group
arrange(desc(extremely_poor)) %>%
group_by(province) %>%
slice(1:3)
province %>%                                      # Top N highest values by group
arrange(desc(extremely_poor)) %>%
group_by(province) %>%
slice(1:3)
province2
province %>%                                      # Top N highest values by group
arrange(desc(extremely_poor)) %>%
slice(1:3)
province %>%                                      # Top N highest values by group
arrange(desc(extremely_poor))
## Top three provinces with extreme poverty:
top_poorer <- province %>%
arrange(desc(extremely_poor)) %>%
slice(1:3)
top_poorer
## Social Registry Data Files
# Clean environment
rm(list=ls())
# Set working directory
setwd("~/Desktop/Autumn 2022/Data Visualization/CAPP30239_FA22/data")
# Load library
library(tidyverse)
# Load data
age <- read_csv("age.csv")
deciles <- read_csv("deciles.csv")
education <- read_csv("education.csv")
ethnicity <- read_csv("ethnicity.csv")
job_type <- read_csv("job_type.csv")
province <- read_csv("province.csv")
# Preliminary analysis
## Top three provinces with extreme poverty: Esmeraldas, Manabi, Chimborazo
top_poorer <- province %>%
arrange(desc(extremely_poor)) %>%
slice(1:3)
View(province)
# Clean environment
rm(list=ls())
## Social Registry Data Files
# Clean environment
rm(list=ls())
# Set working directory
setwd("~/Desktop/Autumn 2022/Data Visualization/CAPP30239_FA22/data")
# Load library
library(tidyverse)
# Load data
age <- read_csv("age.csv")
deciles <- read_csv("deciles.csv")
education <- read_csv("education.csv")
ethnicity <- read_csv("ethnicity.csv")
job_type <- read_csv("job_type.csv")
province <- read_csv("province.csv")
# Preliminary analysis
## Top three provinces with extreme poverty: Esmeraldas, Manabi, Chimborazo
top_poorer <- province %>%
arrange(desc(extremely_poor)) %>%
slice(1:3)
province$rank_pop<-rank(province$population)
View(province)
province %>% filter(province == "Esmeraldas") %>% select(rank_pop)
a <- province %>% filter(province == "Esmeraldas") %>% select(rank_pop)
a
province %>% filter(province == "Esmeraldas")
province %>% select(rank_pop)  %>% filter(province == "Esmeraldas")
province_df <- read_csv("province.csv")
# Preliminary analysis
## Top three provinces with extreme poverty: Esmeraldas, Manabi, Chimborazo
top_poorer <- province %>%
arrange(desc(extremely_poor)) %>%
slice(1:3)
## Create column with rank by population size
province$rank_pop<-rank(province$population)
## Find population rank for top 3 extremely poor provinces:
province_df %>% select(rank_pop)  %>% filter(province == "Esmeraldas")
province_df <- read_csv("province.csv")
# Preliminary analysis
## Top three provinces with extreme poverty: Esmeraldas, Manabi, Chimborazo
top_poorer <- province %>%
arrange(desc(extremely_poor)) %>%
slice(1:3)
## Create column with rank by population size
province_df$rank_pop<-rank(province$population)
## Find population rank for top 3 extremely poor provinces:
province_df %>% select(rank_pop)  %>% filter(province == "Esmeraldas")
province_df %>% select(rank_pop)
## Find population rank for top 3 extremely poor provinces:
province_df %>% select(rank_pop, province)  %>% filter(province == "Esmeraldas")
province_df %>% select(rank_pop, province)
province_df %>%
select(rank_pop, province)  %>%
filter(province == "ESMERALDAS")
province_df %>%
select(rank_pop)  %>%
filter(province == "ESMERALDAS")
province_df %>%
select(rank_pop)  %>%
filter(province == "ESMERALDAS")
## Find population rank for top 3 extremely poor provinces:
province_df %>%
select(rank_pop, province)  %>%
filter(province == "ESMERALDAS")
a <- province_df %>%
select(rank_pop, province)  %>%
filter(province == "ESMERALDAS")
a[0]
province_df %>%
select(rank_pop, province)  %>%
filter(province == "ESMERALDAS")
province_df %>%
select(rank_pop, province)  %>%
filter(province == "MANABI")
province_df %>%
select(rank_pop, province)  %>%
filter(province == "CHIMBORAZO")
province_df$poverty_total<-province_df$extremely_poor + province_df$ymoderateyl_poor
## Create new variable to add extreme poverty and moderate poverty
province_df$poverty_total<-province_df$extremely_poor + province_df$moderately_poor
View(province_df)
top_poorer <- province_df %>%
arrange(desc(poverty_total)) %>%
slice(1:3)
top_poorer
province_df %>%
arrange(desc(poverty_total)) %>%
slice(1:3)
top_poorer <- province %>%
arrange(desc(extremely_poor)) %>%
slice(1:3)
top_poorer
top_poorer <- province %>%
arrange(desc(extremely_poor)) %>%
select(province, poverty_total) %>%
slice(1:3)
top_poorer <- province_df %>%
arrange(desc(poverty_total)) %>%
select(province, poverty_total) %>%
slice(1:3)
top_poorer
top_poorer <- province %>%
arrange(desc(extremely_poor)) %>%
slice(1:3)
province_df$poverty_total<-province_df$extremely_poor + province_df$moderately_poor
## Top three provinces with total poverty: Esmeraldas, Manabi, Chimborazo
top_poorer_total <- province_df %>%
arrange(desc(poverty_total)) %>%
select(province, poverty_total) %>%
slice(1:3)
top_poorer
top_poorer
top_poorer_total
View(province)
top_poorer <- province %>%
arrange(desc(extremely_poor)) %>%
select(province,extremely_poor) %>%
slice(1:3)
top_poorer_total <- province_df %>%
arrange(desc(poverty_total)) %>%
select(province, poverty_total) %>%
slice(1:3)
top_poorer
top_poorer_total
6542 + 28359
province_df %>%
select(rank_pop, province)  %>%
filter(province == "MANABI")
province_df %>%
select(rank_pop, province)  %>%
filter(province == "GUAYAS")
province_df$pov_perc<- province_df$poverty_total / province_df$population
province_df$pov_perc<- (province_df$poverty_total / province_df$population) *100
province_df %>%
select(pov_perc, province)  %>%
filter(province == "MANABI")
province_df %>%
select(pov_perc, province)  %>%
filter(province == "GUAYAS")
province_df %>%
select(pov_perc, province)  %>%
filter(province == "ESMERALDAS")
top_rich <- province_df %>%
arrange(asc(poverty_total)) %>%
select(province, poverty_total) %>%
slice(1:3)
top_rich
province_df %>%
arrange(asc(poverty_total)) %>%
select(province, poverty_total) %>%
slice(1:3)
province_df %>%
arrange(poverty_total) %>%
select(province, poverty_total) %>%
slice(1:3)
View(ethnicity)
View(education)
View(job_type)
View(ethnicity)
View(age)
